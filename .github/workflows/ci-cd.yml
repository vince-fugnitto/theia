name: CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  CXX: c++
  NODE_OPTIONS: --max_old_space_size=4096

jobs:
  build-lint-test:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
    - name: Setup Ubuntu
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get install g++-4.8 libsecret-1-dev xvfb libx11-dev libxkbfile-dev
        export DISPLAY=:99.0
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        echo "XVFB configured"
        if [[ "$PYTHON" == *python3 ]]; then
          sudo apt-get -y install python3
        fi
    - name: Use Java JDK 9
      uses: actions/setup-java@v1
      with:
        java-package: jdk
        java-version: 9
    - name: Use Node.js 12
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - uses: actions/checkout@v2
    - name: Cache Yarn Install
      id: cache-yarn-install
      uses: actions/cache@v2
      with:
        path: |
          /tmp/vscode-ripgrep-cache-*
          **/node_modules
          plugins
          !**/node_modules/electron
          !**/@theia/electron/download
          !**/@theia/electron/post-install.log
        key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock') }}
    - name: Yarn Install
      if: steps.cache-yarn-install.outputs.cache-hit != 'true'
      run: yarn
    - name: Build
      run: yarn build
    - name: Linting
      run: yarn lint
    - name: Testing
      run: yarn test
  # ubuntu:
  #   runs-on: ubuntu-latest
  #   env:
  #       CXX: g++-4.8
  #       PYTHON: /usr/bin/python3
  #   steps:
  #   - name: Setup Ubuntu
  #     run: |
  #       sudo apt-get install g++-4.8 libsecret-1-dev xvfb libx11-dev libxkbfile-dev
  #       export DISPLAY=:99.0
  #       Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
  #       echo "XVFB configured"
  #       if [[ "$PYTHON" == *python3 ]]; then
  #         sudo apt-get -y install python3
  #       fi
  #   - uses: actions/checkout@v2
  #   - uses: ./.github/actions/theia-build-test
  # windows:
  #   runs-on: windows-latest
  #   env:
  #     YARN_GPG: no
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: ./.github/actions/theia-build-test
  #     with:
  #       shell: cmd
  # macos:
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: ./.github/actions/theia-build-test
